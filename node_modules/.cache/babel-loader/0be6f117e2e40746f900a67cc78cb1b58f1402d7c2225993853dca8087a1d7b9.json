{"ast":null,"code":"import _slicedToArray from\"/Users/utils/misc/alexnicita.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"/Users/utils/misc/alexnicita.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/utils/misc/alexnicita.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useReducer,useEffect,useState}from'react';import sampleSize from'lodash.samplesize';import{Config}from'./config';import MinesweeperView from'./MinesweeperView';// state: {\n//   difficulty: 'Beginner' || 'Intermediate' || 'Expert',\n//   status: 'new' || 'started' || 'died' || 'won',\n//   rows: Number,\n//   columns: Number,\n//   mines: Number,\n//   ceils: Array {\n//     state: 'cover' || 'flag' || 'unknown' || 'open' || 'die' || 'misflagged',\n//     minesAround: Number (negative for mine itself),\n//     opening: true || false\n//   }\n// }\nimport{jsx as _jsx}from\"react/jsx-runtime\";function getInitState(){var difficulty=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'Beginner';return _objectSpread({difficulty:difficulty,status:'new'},genGameConfig(Config[difficulty]));}function reducer(state){var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};switch(action.type){case'CLEAR_MAP':var difficulty=action.payload||state.difficulty;return getInitState(difficulty);case'START_GAME':var exclude=action.payload;return _objectSpread(_objectSpread(_objectSpread({},state),insertMines(_objectSpread(_objectSpread({},Config[state.difficulty]),{},{exclude:exclude}),state.ceils)),{},{status:'started'});case'OPEN_CEIL':{var indexes=autoCeils(state,action.payload);var ceils=_toConsumableArray(state.ceils);indexes.forEach(function(i){var ceil=ceils[i];ceils[i]=_objectSpread(_objectSpread({},ceil),{},{state:'open'});});return _objectSpread(_objectSpread({},state),{},{ceils:ceils});}case'CHANGE_CEIL_STATE':{var index=action.payload;var _ceils=_toConsumableArray(state.ceils);var ceil=state.ceils[index];var newState;switch(ceil.state){case'cover':newState='flag';break;case'flag':newState='unknown';break;case'unknown':newState='cover';break;default:throw new Error(\"Unknown ceil state \".concat(ceil.state));}_ceils[index]=_objectSpread(_objectSpread({},ceil),{},{state:newState});return _objectSpread(_objectSpread({},state),{},{ceils:_ceils});}case'GAME_OVER':{var _ceils2=state.ceils.map(function(ceil){if(ceil.minesAround<0&&ceil.state!=='flag'){return _objectSpread(_objectSpread({},ceil),{},{state:'mine'});}else if(ceil.state==='flag'&&ceil.minesAround>=0){return _objectSpread(_objectSpread({},ceil),{},{state:'misflagged'});}else{return _objectSpread(_objectSpread({},ceil),{},{opening:false});}});_ceils2[action.payload].state='die';return _objectSpread(_objectSpread({},state),{},{status:'died',ceils:_ceils2});}case'WON':{var _ceils3=state.ceils.map(function(ceil){if(ceil.minesAround>=0){return _objectSpread(_objectSpread({},ceil),{},{state:'open'});}else{return _objectSpread(_objectSpread({},ceil),{},{state:'flag'});}});return _objectSpread(_objectSpread({},state),{},{status:'won',ceils:_ceils3});}case'OPENING_CEIL':{var _ceil=state.ceils[action.payload];var _ceils4=state.ceils.map(function(ceil){return _objectSpread(_objectSpread({},ceil),{},{opening:false});});_ceils4[action.payload]=_objectSpread(_objectSpread({},_ceil),{},{opening:true});return _objectSpread(_objectSpread({},state),{},{ceils:_ceils4});}case'OPENING_CEILS':{var _indexes=getNearIndexes(action.payload,state.rows,state.columns);var _ceils5=state.ceils.map(function(ceil){return _objectSpread(_objectSpread({},ceil),{},{opening:false});});[].concat(_toConsumableArray(_indexes),[action.payload]).forEach(function(index){var ceil=_objectSpread({},_ceils5[index]);ceil.opening=true;_ceils5[index]=ceil;});return _objectSpread(_objectSpread({},state),{},{ceils:_ceils5});}default:return state;}}function MineSweeper(_ref){var defaultDifficulty=_ref.defaultDifficulty,onClose=_ref.onClose;var _useReducer=useReducer(reducer,getInitState(defaultDifficulty)),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var seconds=useTimer(state.status);function changeCeilState(index){var ceil=state.ceils[index];if(ceil.state==='open'||['won','died'].includes(state.status))return;dispatch({type:'CHANGE_CEIL_STATE',payload:index});}function openCeil(index){switch(state.status){case'new':dispatch({type:'START_GAME',payload:index});dispatch({type:'OPEN_CEIL',payload:index});break;case'started':var ceil=state.ceils[index];if(['flag','open'].includes(ceil.state)){break;}else if(ceil.minesAround<0){dispatch({type:'GAME_OVER',payload:index});}else{dispatch({type:'OPEN_CEIL',payload:index});}break;default:// console.log(state.status);\n}}function openCeils(index){var ceil=state.ceils[index];if(ceil.state!=='open'||ceil.minesAround<=0||state.status!=='started')return;var indexes=getNearIndexes(index,state.rows,state.columns);var nearCeils=indexes.map(function(i){return state.ceils[i];});if(nearCeils.filter(function(ceil){return ceil.state==='flag';}).length!==ceil.minesAround)return;var mineIndex=indexes.find(function(i){return state.ceils[i].minesAround<0&&state.ceils[i].state!=='flag';});if(mineIndex){dispatch({type:'GAME_OVER',payload:mineIndex});}else{indexes.forEach(function(i){return dispatch({type:'OPEN_CEIL',payload:i});});}}useEffect(function(){if(state.status==='started'&&checkRemains()===0){dispatch({type:'WON'});}});function onReset(difficulty){dispatch({type:'CLEAR_MAP',payload:difficulty});}function checkRemains(){var safeCeils=state.ceils.filter(function(ceil){return ceil.state!=='open';}).filter(function(ceil){return ceil.minesAround>=0;});return safeCeils.length;}function openingCeil(index){if(['died','won'].includes(state.status))return;dispatch({type:'OPENING_CEIL',payload:index});}function openingCeils(index){if(['died','won'].includes(state.status))return;dispatch({type:'OPENING_CEILS',payload:index});}return/*#__PURE__*/_jsx(MinesweeperView,_objectSpread(_objectSpread({},state),{},{onClose:onClose,changeCeilState:changeCeilState,openCeil:openCeil,openCeils:openCeils,onReset:onReset,seconds:seconds,openingCeil:openingCeil,openingCeils:openingCeils}));}function genGameConfig(config){var rows=config.rows,columns=config.columns,mines=config.mines;var ceils=Array(rows*columns).fill().map(function(_){return{state:'cover',minesAround:0,opening:false};});return{rows:rows,columns:columns,ceils:ceils,mines:mines};}function insertMines(config,originCeils){var rows=config.rows,columns=config.columns,mines=config.mines,exclude=config.exclude;var ceils=originCeils.map(function(ceil){return _objectSpread({},ceil);});if(rows*columns!==ceils.length)throw new Error('rows and columns not equal to ceils');var indexArray=_toConsumableArray(Array(rows*columns).keys());sampleSize(indexArray.filter(function(i){return i!==exclude;}),mines).forEach(function(chosen){ceils[chosen].minesAround=-10;getNearIndexes(chosen,rows,columns).forEach(function(nearIndex){ceils[nearIndex].minesAround+=1;});});return{rows:rows,columns:columns,ceils:ceils,mines:mines};}function autoCeils(state,index){var rows=state.rows,columns=state.columns;var ceils=state.ceils.map(function(ceil){return _objectSpread(_objectSpread({},ceil),{},{walked:false});});return walkCeils(index);function walkCeils(index){var ceil=ceils[index];if(ceil.walked||ceil.minesAround<0||ceil.state==='flag')return[];ceil.walked=true;if(ceil.minesAround>0)return[index];return[index].concat(_toConsumableArray(getNearIndexes(index,rows,columns).reduce(function(lastIndexes,ceilIndex){return[].concat(_toConsumableArray(lastIndexes),_toConsumableArray(walkCeils(ceilIndex)));},[])));}}function getNearIndexes(index,rows,columns){if(index<0||index>=rows*columns)return[];var row=Math.floor(index/columns);var column=index%columns;return[index-columns-1,index-columns,index-columns+1,index-1,index+1,index+columns-1,index+columns,index+columns+1].filter(function(_,arrayIndex){if(row===0&&arrayIndex<3)return false;if(row===rows-1&&arrayIndex>4)return false;if(column===0&&[0,3,5].includes(arrayIndex))return false;if(column===columns-1&&[2,4,7].includes(arrayIndex))return false;return true;});}function useTimer(status){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),seconds=_useState2[0],setSeconds=_useState2[1];function addSecond(){setSeconds(function(sec){return sec+1;});}useEffect(function(){var timer;switch(status){case'started':timer=setInterval(addSecond,1000);break;case'new':setSeconds(0);break;default:break;}return function(){return clearInterval(timer);};},[status]);return seconds;}export default MineSweeper;","map":{"version":3,"names":["React","useReducer","useEffect","useState","sampleSize","Config","MinesweeperView","getInitState","difficulty","status","genGameConfig","reducer","state","action","type","payload","exclude","insertMines","ceils","indexes","autoCeils","forEach","i","ceil","index","newState","Error","map","minesAround","opening","getNearIndexes","rows","columns","MineSweeper","defaultDifficulty","onClose","dispatch","seconds","useTimer","changeCeilState","includes","openCeil","openCeils","nearCeils","filter","length","mineIndex","find","checkRemains","onReset","safeCeils","openingCeil","openingCeils","config","mines","Array","fill","_","originCeils","indexArray","keys","chosen","nearIndex","walked","walkCeils","reduce","lastIndexes","ceilIndex","row","Math","floor","column","arrayIndex","setSeconds","addSecond","sec","timer","setInterval","clearInterval"],"sources":["/Users/utils/misc/alexnicita.github.io/src/WinXP/apps/Minesweeper/index.js"],"sourcesContent":["import React, { useReducer, useEffect, useState } from 'react';\nimport sampleSize from 'lodash.samplesize';\n\nimport { Config } from './config';\nimport MinesweeperView from './MinesweeperView';\n\n// state: {\n//   difficulty: 'Beginner' || 'Intermediate' || 'Expert',\n//   status: 'new' || 'started' || 'died' || 'won',\n//   rows: Number,\n//   columns: Number,\n//   mines: Number,\n//   ceils: Array {\n//     state: 'cover' || 'flag' || 'unknown' || 'open' || 'die' || 'misflagged',\n//     minesAround: Number (negative for mine itself),\n//     opening: true || false\n//   }\n// }\n\nfunction getInitState(difficulty = 'Beginner') {\n  return {\n    difficulty,\n    status: 'new',\n    ...genGameConfig(Config[difficulty]),\n  };\n}\n\nfunction reducer(state, action = {}) {\n  switch (action.type) {\n    case 'CLEAR_MAP':\n      const difficulty = action.payload || state.difficulty;\n      return getInitState(difficulty);\n    case 'START_GAME':\n      const exclude = action.payload;\n      return {\n        ...state,\n        ...insertMines({ ...Config[state.difficulty], exclude }, state.ceils),\n        status: 'started',\n      };\n    case 'OPEN_CEIL': {\n      const indexes = autoCeils(state, action.payload);\n      const ceils = [...state.ceils];\n      indexes.forEach(i => {\n        const ceil = ceils[i];\n        ceils[i] = { ...ceil, state: 'open' };\n      });\n      return {\n        ...state,\n        ceils,\n      };\n    }\n    case 'CHANGE_CEIL_STATE': {\n      const index = action.payload;\n      const ceils = [...state.ceils];\n      const ceil = state.ceils[index];\n      let newState;\n      switch (ceil.state) {\n        case 'cover':\n          newState = 'flag';\n          break;\n        case 'flag':\n          newState = 'unknown';\n          break;\n        case 'unknown':\n          newState = 'cover';\n          break;\n        default:\n          throw new Error(`Unknown ceil state ${ceil.state}`);\n      }\n      ceils[index] = { ...ceil, state: newState };\n      return {\n        ...state,\n        ceils,\n      };\n    }\n    case 'GAME_OVER': {\n      const ceils = state.ceils.map(ceil => {\n        if (ceil.minesAround < 0 && ceil.state !== 'flag') {\n          return {\n            ...ceil,\n            state: 'mine',\n          };\n        } else if (ceil.state === 'flag' && ceil.minesAround >= 0) {\n          return {\n            ...ceil,\n            state: 'misflagged',\n          };\n        } else {\n          return {\n            ...ceil,\n            opening: false,\n          };\n        }\n      });\n      ceils[action.payload].state = 'die';\n      return {\n        ...state,\n        status: 'died',\n        ceils,\n      };\n    }\n    case 'WON': {\n      const ceils = state.ceils.map(ceil => {\n        if (ceil.minesAround >= 0) {\n          return {\n            ...ceil,\n            state: 'open',\n          };\n        } else {\n          return {\n            ...ceil,\n            state: 'flag',\n          };\n        }\n      });\n      return {\n        ...state,\n        status: 'won',\n        ceils,\n      };\n    }\n    case 'OPENING_CEIL': {\n      const ceil = state.ceils[action.payload];\n      const ceils = state.ceils.map(ceil => ({\n        ...ceil,\n        opening: false,\n      }));\n      ceils[action.payload] = { ...ceil, opening: true };\n      return {\n        ...state,\n        ceils,\n      };\n    }\n    case 'OPENING_CEILS': {\n      const indexes = getNearIndexes(action.payload, state.rows, state.columns);\n      const ceils = state.ceils.map(ceil => ({\n        ...ceil,\n        opening: false,\n      }));\n      [...indexes, action.payload].forEach(index => {\n        const ceil = { ...ceils[index] };\n        ceil.opening = true;\n        ceils[index] = ceil;\n      });\n      return {\n        ...state,\n        ceils,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nfunction MineSweeper({ defaultDifficulty, onClose }) {\n  const [state, dispatch] = useReducer(\n    reducer,\n    getInitState(defaultDifficulty),\n  );\n  const seconds = useTimer(state.status);\n  function changeCeilState(index) {\n    const ceil = state.ceils[index];\n    if (ceil.state === 'open' || ['won', 'died'].includes(state.status)) return;\n    dispatch({ type: 'CHANGE_CEIL_STATE', payload: index });\n  }\n  function openCeil(index) {\n    switch (state.status) {\n      case 'new':\n        dispatch({ type: 'START_GAME', payload: index });\n        dispatch({ type: 'OPEN_CEIL', payload: index });\n        break;\n      case 'started':\n        const ceil = state.ceils[index];\n        if (['flag', 'open'].includes(ceil.state)) {\n          break;\n        } else if (ceil.minesAround < 0) {\n          dispatch({ type: 'GAME_OVER', payload: index });\n        } else {\n          dispatch({ type: 'OPEN_CEIL', payload: index });\n        }\n        break;\n      default:\n      // console.log(state.status);\n    }\n  }\n  function openCeils(index) {\n    const ceil = state.ceils[index];\n    if (\n      ceil.state !== 'open' ||\n      ceil.minesAround <= 0 ||\n      state.status !== 'started'\n    )\n      return;\n    const indexes = getNearIndexes(index, state.rows, state.columns);\n    const nearCeils = indexes.map(i => state.ceils[i]);\n    if (\n      nearCeils.filter(ceil => ceil.state === 'flag').length !==\n      ceil.minesAround\n    )\n      return;\n    const mineIndex = indexes.find(\n      i => state.ceils[i].minesAround < 0 && state.ceils[i].state !== 'flag',\n    );\n    if (mineIndex) {\n      dispatch({ type: 'GAME_OVER', payload: mineIndex });\n    } else {\n      indexes.forEach(i => dispatch({ type: 'OPEN_CEIL', payload: i }));\n    }\n  }\n  useEffect(() => {\n    if (state.status === 'started' && checkRemains() === 0) {\n      dispatch({ type: 'WON' });\n    }\n  });\n  function onReset(difficulty) {\n    dispatch({ type: 'CLEAR_MAP', payload: difficulty });\n  }\n  function checkRemains() {\n    const safeCeils = state.ceils\n      .filter(ceil => ceil.state !== 'open')\n      .filter(ceil => ceil.minesAround >= 0);\n    return safeCeils.length;\n  }\n  function openingCeil(index) {\n    if (['died', 'won'].includes(state.status)) return;\n    dispatch({ type: 'OPENING_CEIL', payload: index });\n  }\n  function openingCeils(index) {\n    if (['died', 'won'].includes(state.status)) return;\n    dispatch({ type: 'OPENING_CEILS', payload: index });\n  }\n  return (\n    <MinesweeperView\n      {...state}\n      onClose={onClose}\n      changeCeilState={changeCeilState}\n      openCeil={openCeil}\n      openCeils={openCeils}\n      onReset={onReset}\n      seconds={seconds}\n      openingCeil={openingCeil}\n      openingCeils={openingCeils}\n    />\n  );\n}\n\nfunction genGameConfig(config) {\n  const { rows, columns, mines } = config;\n  const ceils = Array(rows * columns)\n    .fill()\n    .map(_ => ({\n      state: 'cover',\n      minesAround: 0,\n      opening: false,\n    }));\n  return {\n    rows,\n    columns,\n    ceils,\n    mines,\n  };\n}\n\nfunction insertMines(config, originCeils) {\n  const { rows, columns, mines, exclude } = config;\n  const ceils = originCeils.map(ceil => ({ ...ceil }));\n  if (rows * columns !== ceils.length)\n    throw new Error('rows and columns not equal to ceils');\n  const indexArray = [...Array(rows * columns).keys()];\n  sampleSize(\n    indexArray.filter(i => i !== exclude),\n    mines,\n  ).forEach(chosen => {\n    ceils[chosen].minesAround = -10;\n    getNearIndexes(chosen, rows, columns).forEach(nearIndex => {\n      ceils[nearIndex].minesAround += 1;\n    });\n  });\n  return {\n    rows,\n    columns,\n    ceils,\n    mines,\n  };\n}\n\nfunction autoCeils(state, index) {\n  const { rows, columns } = state;\n  const ceils = state.ceils.map(ceil => ({\n    ...ceil,\n    walked: false,\n  }));\n  return walkCeils(index);\n  function walkCeils(index) {\n    const ceil = ceils[index];\n    if (ceil.walked || ceil.minesAround < 0 || ceil.state === 'flag') return [];\n    ceil.walked = true;\n    if (ceil.minesAround > 0) return [index];\n    return [\n      index,\n      ...getNearIndexes(index, rows, columns).reduce(\n        (lastIndexes, ceilIndex) => {\n          return [...lastIndexes, ...walkCeils(ceilIndex)];\n        },\n        [],\n      ),\n    ];\n  }\n}\n\nfunction getNearIndexes(index, rows, columns) {\n  if (index < 0 || index >= rows * columns) return [];\n  const row = Math.floor(index / columns);\n  const column = index % columns;\n  return [\n    index - columns - 1,\n    index - columns,\n    index - columns + 1,\n    index - 1,\n    index + 1,\n    index + columns - 1,\n    index + columns,\n    index + columns + 1,\n  ].filter((_, arrayIndex) => {\n    if (row === 0 && arrayIndex < 3) return false;\n    if (row === rows - 1 && arrayIndex > 4) return false;\n    if (column === 0 && [0, 3, 5].includes(arrayIndex)) return false;\n    if (column === columns - 1 && [2, 4, 7].includes(arrayIndex)) return false;\n    return true;\n  });\n}\n\nfunction useTimer(status) {\n  const [seconds, setSeconds] = useState(0);\n  function addSecond() {\n    setSeconds(sec => sec + 1);\n  }\n  useEffect(() => {\n    let timer;\n    switch (status) {\n      case 'started':\n        timer = setInterval(addSecond, 1000);\n        break;\n      case 'new':\n        setSeconds(0);\n        break;\n      default:\n        break;\n    }\n    return () => clearInterval(timer);\n  }, [status]);\n  return seconds;\n}\n\nexport default MineSweeper;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}