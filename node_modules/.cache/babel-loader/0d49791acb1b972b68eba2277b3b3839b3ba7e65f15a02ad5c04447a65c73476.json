{"ast":null,"code":"import _slicedToArray from \"/Users/utils/misc/alexnicita.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _taggedTemplateLiteral from \"/Users/utils/misc/alexnicita.github.io/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _jsxFileName = \"/Users/utils/misc/alexnicita.github.io/src/WinXP/apps/Notepad/index.js\",\n  _templateObject,\n  _s = $RefreshSig$(),\n  _templateObject2,\n  _templateObject3;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { WindowDropDowns } from 'components';\nimport dropDownData from './dropDownData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Notepad(_ref) {\n  _s();\n  var onClose = _ref.onClose;\n  var resume = \"\\n\\n  {\\n    component: MyComputer,\\n    header: {\\n      title: 'My Computer',\\n      icon: computer,\\n    },\\n    defaultSize: {\\n      width: 660,\\n      height: 500,\\n    },\\n    defaultOffset: {\\n      x: 250,\\n      y: 40,\\n    },\\n    resizable: true,\\n    minimized: false,\\n    maximized: window.innerWidth < 800,\\n    id: genId(),\\n    zIndex: genIndex(),\\n  },\\n\\n  \"(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\"])));\n  var _useState = useState(resume),\n    _useState2 = _slicedToArray(_useState, 2),\n    docText = _useState2[0],\n    setDocText = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    wordWrap = _useState4[0],\n    setWordWrap = _useState4[1];\n  function onClickOptionItem(item) {\n    switch (item) {\n      case 'Exit':\n        onClose();\n        break;\n      case 'Word Wrap':\n        setWordWrap(!wordWrap);\n        break;\n      case 'Time/Date':\n        var date = new Date();\n        setDocText(\"\".concat(docText).concat(date.toLocaleTimeString(), \" \").concat(date.toLocaleDateString()));\n        break;\n      default:\n    }\n  }\n  function onTextAreaKeyDown(e) {\n    // handle tabs in text area\n    if (e.which === 9) {\n      e.preventDefault();\n      e.persist();\n      var start = e.target.selectionStart;\n      var end = e.target.selectionEnd;\n      setDocText(\"\".concat(docText.substring(0, start), \"\\t\").concat(docText.substring(end)));\n\n      // asynchronously update textarea selection to include tab\n      // workaround due to https://github.com/facebook/react/issues/14174\n      requestAnimationFrame(function () {\n        e.target.selectionStart = start + 1;\n        e.target.selectionEnd = start + 1;\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Div, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"np__toolbar\",\n      children: /*#__PURE__*/_jsxDEV(WindowDropDowns, {\n        items: dropDownData,\n        onClickItem: onClickOptionItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTextarea, {\n      wordWrap: wordWrap,\n      value: docText,\n      onChange: function onChange(e) {\n        return setDocText(e.target.value);\n      },\n      onKeyDown: onTextAreaKeyDown,\n      spellCheck: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(Notepad, \"rODOs5zca8Tfhf8SwoNC5rahRU8=\");\n_c = Notepad;\nvar Div = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  height: 100%;\\n  background: linear-gradient(to right, #edede5 0%, #ede8cd 100%);\\n  display: flex;\\n  flex-direction: column;\\n  align-items: stretch;\\n  .np__toolbar {\\n    position: relative;\\n    height: 21px;\\n    flex-shrink: 0;\\n    border-bottom: 1px solid white;\\n  }\\n\"])));\n_c2 = Div;\nvar StyledTextarea = styled.textarea(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  flex: auto;\\n  outline: none;\\n  font-family: 'Lucida Console', monospace;\\n  font-size: 13px;\\n  line-height: 14px;\\n  resize: none;\\n  padding: 2px;\\n  \", \"\\n  overflow-y: scroll;\\n  border: 1px solid #96abff;\\n\"])), function (props) {\n  return props.wordWrap ? '' : 'white-space: nowrap; overflow-x: scroll;';\n});\n_c3 = StyledTextarea;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Notepad\");\n$RefreshReg$(_c2, \"Div\");\n$RefreshReg$(_c3, \"StyledTextarea\");","map":{"version":3,"names":["React","useState","styled","WindowDropDowns","dropDownData","Notepad","onClose","resume","docText","setDocText","wordWrap","setWordWrap","onClickOptionItem","item","date","Date","toLocaleTimeString","toLocaleDateString","onTextAreaKeyDown","e","which","preventDefault","persist","start","target","selectionStart","end","selectionEnd","substring","requestAnimationFrame","value","Div","div","StyledTextarea","textarea","props"],"sources":["/Users/utils/misc/alexnicita.github.io/src/WinXP/apps/Notepad/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { WindowDropDowns } from 'components';\nimport dropDownData from './dropDownData';\n\nexport default function Notepad({ onClose }) {\n\n  const resume = `\n\n  {\n    component: MyComputer,\n    header: {\n      title: 'My Computer',\n      icon: computer,\n    },\n    defaultSize: {\n      width: 660,\n      height: 500,\n    },\n    defaultOffset: {\n      x: 250,\n      y: 40,\n    },\n    resizable: true,\n    minimized: false,\n    maximized: window.innerWidth < 800,\n    id: genId(),\n    zIndex: genIndex(),\n  },\n\n  ```\n\n  const [docText, setDocText] = useState(resume);\n  const [wordWrap, setWordWrap] = useState(false);\n\n  function onClickOptionItem(item) {\n    switch (item) {\n      case 'Exit':\n        onClose();\n        break;\n      case 'Word Wrap':\n        setWordWrap(!wordWrap);\n        break;\n      case 'Time/Date':\n        const date = new Date();\n        setDocText(\n          `${docText}${date.toLocaleTimeString()} ${date.toLocaleDateString()}`,\n        );\n        break;\n      default:\n    }\n  }\n  function onTextAreaKeyDown(e) {\n    // handle tabs in text area\n    if (e.which === 9) {\n      e.preventDefault();\n      e.persist();\n      var start = e.target.selectionStart;\n      var end = e.target.selectionEnd;\n      setDocText(`${docText.substring(0, start)}\\t${docText.substring(end)}`);\n\n      // asynchronously update textarea selection to include tab\n      // workaround due to https://github.com/facebook/react/issues/14174\n      requestAnimationFrame(() => {\n        e.target.selectionStart = start + 1;\n        e.target.selectionEnd = start + 1;\n      });\n    }\n  }\n\n  return (\n    <Div>\n      <section className=\"np__toolbar\">\n        <WindowDropDowns items={dropDownData} onClickItem={onClickOptionItem} />\n      </section>\n      <StyledTextarea\n        wordWrap={wordWrap}\n        value={docText}\n        onChange={e => setDocText(e.target.value)}\n        onKeyDown={onTextAreaKeyDown}\n        spellCheck={false}\n      />\n    </Div>\n  );\n}\n\nconst Div = styled.div`\n  height: 100%;\n  background: linear-gradient(to right, #edede5 0%, #ede8cd 100%);\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  .np__toolbar {\n    position: relative;\n    height: 21px;\n    flex-shrink: 0;\n    border-bottom: 1px solid white;\n  }\n`;\n\nconst StyledTextarea = styled.textarea`\n  flex: auto;\n  outline: none;\n  font-family: 'Lucida Console', monospace;\n  font-size: 13px;\n  line-height: 14px;\n  resize: none;\n  padding: 2px;\n  ${props => (props.wordWrap ? '' : 'white-space: nowrap; overflow-x: scroll;')}\n  overflow-y: scroll;\n  border: 1px solid #96abff;\n`;\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,SAASC,eAAe,QAAQ,YAAY;AAC5C,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAE1C,eAAe,SAASC,OAAO,OAAc;EAAA;EAAA,IAAXC,OAAO,QAAPA,OAAO;EAEvC,IAAMC,MAAM,mcAuBT;EAEH,gBAA8BN,QAAQ,CAACM,MAAM,CAAC;IAAA;IAAvCC,OAAO;IAAEC,UAAU;EAC1B,iBAAgCR,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAxCS,QAAQ;IAAEC,WAAW;EAE5B,SAASC,iBAAiB,CAACC,IAAI,EAAE;IAC/B,QAAQA,IAAI;MACV,KAAK,MAAM;QACTP,OAAO,EAAE;QACT;MACF,KAAK,WAAW;QACdK,WAAW,CAAC,CAACD,QAAQ,CAAC;QACtB;MACF,KAAK,WAAW;QACd,IAAMI,IAAI,GAAG,IAAIC,IAAI,EAAE;QACvBN,UAAU,WACLD,OAAO,SAAGM,IAAI,CAACE,kBAAkB,EAAE,cAAIF,IAAI,CAACG,kBAAkB,EAAE,EACpE;QACD;MACF;IAAQ;EAEZ;EACA,SAASC,iBAAiB,CAACC,CAAC,EAAE;IAC5B;IACA,IAAIA,CAAC,CAACC,KAAK,KAAK,CAAC,EAAE;MACjBD,CAAC,CAACE,cAAc,EAAE;MAClBF,CAAC,CAACG,OAAO,EAAE;MACX,IAAIC,KAAK,GAAGJ,CAAC,CAACK,MAAM,CAACC,cAAc;MACnC,IAAIC,GAAG,GAAGP,CAAC,CAACK,MAAM,CAACG,YAAY;MAC/BlB,UAAU,WAAID,OAAO,CAACoB,SAAS,CAAC,CAAC,EAAEL,KAAK,CAAC,eAAKf,OAAO,CAACoB,SAAS,CAACF,GAAG,CAAC,EAAG;;MAEvE;MACA;MACAG,qBAAqB,CAAC,YAAM;QAC1BV,CAAC,CAACK,MAAM,CAACC,cAAc,GAAGF,KAAK,GAAG,CAAC;QACnCJ,CAAC,CAACK,MAAM,CAACG,YAAY,GAAGJ,KAAK,GAAG,CAAC;MACnC,CAAC,CAAC;IACJ;EACF;EAEA,oBACE,QAAC,GAAG;IAAA,wBACF;MAAS,SAAS,EAAC,aAAa;MAAA,uBAC9B,QAAC,eAAe;QAAC,KAAK,EAAEnB,YAAa;QAAC,WAAW,EAAEQ;MAAkB;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAChE,eACV,QAAC,cAAc;MACb,QAAQ,EAAEF,QAAS;MACnB,KAAK,EAAEF,OAAQ;MACf,QAAQ,EAAE,kBAAAW,CAAC;QAAA,OAAIV,UAAU,CAACU,CAAC,CAACK,MAAM,CAACM,KAAK,CAAC;MAAA,CAAC;MAC1C,SAAS,EAAEZ,iBAAkB;MAC7B,UAAU,EAAE;IAAM;MAAA;MAAA;MAAA;IAAA,QAClB;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GA/EuBb,OAAO;AAAA,KAAPA,OAAO;AAiF/B,IAAM0B,GAAG,GAAG7B,MAAM,CAAC8B,GAAG,iWAYrB;AAAC,MAZID,GAAG;AAcT,IAAME,cAAc,GAAG/B,MAAM,CAACgC,QAAQ,iSAQlC,UAAAC,KAAK;EAAA,OAAKA,KAAK,CAACzB,QAAQ,GAAG,EAAE,GAAG,0CAA0C;AAAA,CAAC,CAG9E;AAAC,MAXIuB,cAAc;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}