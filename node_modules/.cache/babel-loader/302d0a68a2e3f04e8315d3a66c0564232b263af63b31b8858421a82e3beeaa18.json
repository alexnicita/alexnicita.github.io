{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/utils/misc/alexnicita.github.io/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _slicedToArray from\"/Users/utils/misc/alexnicita.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _templateObject,_templateObject2;import React,{useState}from'react';import styled from'styled-components';import{WindowDropDowns}from'components';import dropDownData from'./dropDownData';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Notepad(_ref){var onClose=_ref.onClose;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),docText=_useState2[0],setDocText=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),wordWrap=_useState4[0],setWordWrap=_useState4[1];function onClickOptionItem(item){switch(item){case'Exit':onClose();break;case'Word Wrap':setWordWrap(!wordWrap);break;case'Time/Date':var date=new Date();setDocText(\"\".concat(docText).concat(date.toLocaleTimeString(),\" \").concat(date.toLocaleDateString()));break;default:}}function onTextAreaKeyDown(e){// handle tabs in text area\nif(e.which===9){e.preventDefault();e.persist();var start=e.target.selectionStart;var end=e.target.selectionEnd;setDocText(\"\".concat(docText.substring(0,start),\"\\t\").concat(docText.substring(end)));// asynchronously update textarea selection to include tab\n// workaround due to https://github.com/facebook/react/issues/14174\nrequestAnimationFrame(function(){e.target.selectionStart=start+1;e.target.selectionEnd=start+1;});}}return/*#__PURE__*/_jsxs(Div,{children:[/*#__PURE__*/_jsx(\"section\",{className:\"np__toolbar\",children:/*#__PURE__*/_jsx(WindowDropDowns,{items:dropDownData,onClickItem:onClickOptionItem})}),/*#__PURE__*/_jsx(StyledTextarea,{wordWrap:wordWrap,value:docText,onChange:function onChange(e){return setDocText(e.target.value);},onKeyDown:onTextAreaKeyDown,spellCheck:false})]});}var Div=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  height: 100%;\\n  background: linear-gradient(to right, #edede5 0%, #ede8cd 100%);\\n  display: flex;\\n  flex-direction: column;\\n  align-items: stretch;\\n  .np__toolbar {\\n    position: relative;\\n    height: 21px;\\n    flex-shrink: 0;\\n    border-bottom: 1px solid white;\\n  }\\n\"])));var StyledTextarea=styled.textarea(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  flex: auto;\\n  outline: none;\\n  font-family: 'Lucida Console', monospace;\\n  font-size: 13px;\\n  line-height: 14px;\\n  resize: none;\\n  padding: 2px;\\n  \",\"\\n  overflow-y: scroll;\\n  border: 1px solid #96abff;\\n\"])),function(props){return props.wordWrap?'':'white-space: nowrap; overflow-x: scroll;';});","map":{"version":3,"names":["React","useState","styled","WindowDropDowns","dropDownData","Notepad","onClose","docText","setDocText","wordWrap","setWordWrap","onClickOptionItem","item","date","Date","toLocaleTimeString","toLocaleDateString","onTextAreaKeyDown","e","which","preventDefault","persist","start","target","selectionStart","end","selectionEnd","substring","requestAnimationFrame","value","Div","div","StyledTextarea","textarea","props"],"sources":["/Users/utils/misc/alexnicita.github.io/src/WinXP/apps/Notepad/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { WindowDropDowns } from 'components';\nimport dropDownData from './dropDownData';\n\nexport default function Notepad({ onClose }) {\n  const [docText, setDocText] = useState('');\n  const [wordWrap, setWordWrap] = useState(false);\n\n  function onClickOptionItem(item) {\n    switch (item) {\n      case 'Exit':\n        onClose();\n        break;\n      case 'Word Wrap':\n        setWordWrap(!wordWrap);\n        break;\n      case 'Time/Date':\n        const date = new Date();\n        setDocText(\n          `${docText}${date.toLocaleTimeString()} ${date.toLocaleDateString()}`,\n        );\n        break;\n      default:\n    }\n  }\n  function onTextAreaKeyDown(e) {\n    // handle tabs in text area\n    if (e.which === 9) {\n      e.preventDefault();\n      e.persist();\n      var start = e.target.selectionStart;\n      var end = e.target.selectionEnd;\n      setDocText(`${docText.substring(0, start)}\\t${docText.substring(end)}`);\n\n      // asynchronously update textarea selection to include tab\n      // workaround due to https://github.com/facebook/react/issues/14174\n      requestAnimationFrame(() => {\n        e.target.selectionStart = start + 1;\n        e.target.selectionEnd = start + 1;\n      });\n    }\n  }\n\n  return (\n    <Div>\n      <section className=\"np__toolbar\">\n        <WindowDropDowns items={dropDownData} onClickItem={onClickOptionItem} />\n      </section>\n      <StyledTextarea\n        wordWrap={wordWrap}\n        value={docText}\n        onChange={e => setDocText(e.target.value)}\n        onKeyDown={onTextAreaKeyDown}\n        spellCheck={false}\n      />\n    </Div>\n  );\n}\n\nconst Div = styled.div`\n  height: 100%;\n  background: linear-gradient(to right, #edede5 0%, #ede8cd 100%);\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  .np__toolbar {\n    position: relative;\n    height: 21px;\n    flex-shrink: 0;\n    border-bottom: 1px solid white;\n  }\n`;\n\nconst StyledTextarea = styled.textarea`\n  flex: auto;\n  outline: none;\n  font-family: 'Lucida Console', monospace;\n  font-size: 13px;\n  line-height: 14px;\n  resize: none;\n  padding: 2px;\n  ${props => (props.wordWrap ? '' : 'white-space: nowrap; overflow-x: scroll;')}\n  overflow-y: scroll;\n  border: 1px solid #96abff;\n`;\n"],"mappings":"6SAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAOC,OAAM,KAAM,mBAAmB,CAEtC,OAASC,eAAe,KAAQ,YAAY,CAC5C,MAAOC,aAAY,KAAM,gBAAgB,CAAC,wFAE1C,cAAe,SAASC,QAAO,MAAc,IAAXC,QAAO,MAAPA,OAAO,CACvC,cAA8BL,QAAQ,CAAC,EAAE,CAAC,wCAAnCM,OAAO,eAAEC,UAAU,eAC1B,eAAgCP,QAAQ,CAAC,KAAK,CAAC,yCAAxCQ,QAAQ,eAAEC,WAAW,eAE5B,QAASC,kBAAiB,CAACC,IAAI,CAAE,CAC/B,OAAQA,IAAI,EACV,IAAK,MAAM,CACTN,OAAO,EAAE,CACT,MACF,IAAK,WAAW,CACdI,WAAW,CAAC,CAACD,QAAQ,CAAC,CACtB,MACF,IAAK,WAAW,CACd,GAAMI,KAAI,CAAG,GAAIC,KAAI,EAAE,CACvBN,UAAU,WACLD,OAAO,SAAGM,IAAI,CAACE,kBAAkB,EAAE,aAAIF,IAAI,CAACG,kBAAkB,EAAE,EACpE,CACD,MACF,QAAQ,CAEZ,CACA,QAASC,kBAAiB,CAACC,CAAC,CAAE,CAC5B;AACA,GAAIA,CAAC,CAACC,KAAK,GAAK,CAAC,CAAE,CACjBD,CAAC,CAACE,cAAc,EAAE,CAClBF,CAAC,CAACG,OAAO,EAAE,CACX,GAAIC,MAAK,CAAGJ,CAAC,CAACK,MAAM,CAACC,cAAc,CACnC,GAAIC,IAAG,CAAGP,CAAC,CAACK,MAAM,CAACG,YAAY,CAC/BlB,UAAU,WAAID,OAAO,CAACoB,SAAS,CAAC,CAAC,CAAEL,KAAK,CAAC,cAAKf,OAAO,CAACoB,SAAS,CAACF,GAAG,CAAC,EAAG,CAEvE;AACA;AACAG,qBAAqB,CAAC,UAAM,CAC1BV,CAAC,CAACK,MAAM,CAACC,cAAc,CAAGF,KAAK,CAAG,CAAC,CACnCJ,CAAC,CAACK,MAAM,CAACG,YAAY,CAAGJ,KAAK,CAAG,CAAC,CACnC,CAAC,CAAC,CACJ,CACF,CAEA,mBACE,MAAC,GAAG,yBACF,gBAAS,SAAS,CAAC,aAAa,uBAC9B,KAAC,eAAe,EAAC,KAAK,CAAElB,YAAa,CAAC,WAAW,CAAEO,iBAAkB,EAAG,EAChE,cACV,KAAC,cAAc,EACb,QAAQ,CAAEF,QAAS,CACnB,KAAK,CAAEF,OAAQ,CACf,QAAQ,CAAE,kBAAAW,CAAC,QAAIV,WAAU,CAACU,CAAC,CAACK,MAAM,CAACM,KAAK,CAAC,EAAC,CAC1C,SAAS,CAAEZ,iBAAkB,CAC7B,UAAU,CAAE,KAAM,EAClB,GACE,CAEV,CAEA,GAAMa,IAAG,CAAG5B,MAAM,CAAC6B,GAAG,2VAYrB,CAED,GAAMC,eAAc,CAAG9B,MAAM,CAAC+B,QAAQ,2RAQlC,SAAAC,KAAK,QAAKA,MAAK,CAACzB,QAAQ,CAAG,EAAE,CAAG,0CAA0C,EAAC,CAG9E"},"metadata":{},"sourceType":"module","externalDependencies":[]}